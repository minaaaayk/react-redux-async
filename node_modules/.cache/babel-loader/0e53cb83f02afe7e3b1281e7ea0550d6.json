{"ast":null,"code":"var _jsxFileName = \"/home/mina/Desktop/test/my-app/src/App.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store/actions/postactions';\n\nconst mapStateToProps = state => {\n  return [...state.posts];\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllPosts: () => dispatch(actionCreators.getALlPosts()),\n    getOnePost: id => dispatch(actionCreators.getOnePosts(id)),\n    getComment: postId => dispatch(actionCreators.getComments(postId)),\n    postData: data => dispatch(actionCreators.PostData(data)),\n    deletePost: id => dispatch(actionCreators.DeletPost(id))\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps); // The inferred type will look like:\n// {isOn: boolean, toggleOn: () => void}\n\nfunction App(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.getAllPosts(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Get All Posts\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.getOnePost(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Get Post (1)\"));\n}\n\nexport default connector(App);","map":{"version":3,"sources":["/home/mina/Desktop/test/my-app/src/App.tsx"],"names":["React","connect","actionCreators","mapStateToProps","state","posts","mapDispatchToProps","dispatch","getAllPosts","getALlPosts","getOnePost","id","getOnePosts","getComment","postId","getComments","postData","data","PostData","deletePost","DeletPost","connector","App","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,OAAO,KAAKC,cAAZ,MAAgC,6BAAhC;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAiB;AACvC,SAAO,CAAC,GAAGA,KAAK,CAACC,KAAV,CAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAkB;AAC7C,SAAO;AACPC,IAAAA,WAAW,EAAE,MAAMD,QAAQ,CAACL,cAAc,CAACO,WAAf,EAAD,CADpB;AAEPC,IAAAA,UAAU,EAAGC,EAAD,IAAeJ,QAAQ,CAACL,cAAc,CAACU,WAAf,CAA2BD,EAA3B,CAAD,CAF5B;AAGPE,IAAAA,UAAU,EAAGC,MAAD,IAAmBP,QAAQ,CAACL,cAAc,CAACa,WAAf,CAA2BD,MAA3B,CAAD,CAHhC;AAIPE,IAAAA,QAAQ,EAAGC,IAAD,IAAeV,QAAQ,CAACL,cAAc,CAACgB,QAAf,CAAwBD,IAAxB,CAAD,CAJ1B;AAKPE,IAAAA,UAAU,EAAGR,EAAD,IAAeJ,QAAQ,CAACL,cAAc,CAACkB,SAAf,CAAyBT,EAAzB,CAAD;AAL5B,GAAP;AAOC,CARD;;AAUA,MAAMU,SAAS,GAAGpB,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAzB,C,CAEA;AACA;;AAIA,SAASgB,GAAT,CAAaC,KAAb,EAAmC;AAEjC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACf,WAAN,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,IAAA,OAAO,EAAEe,KAAK,CAACb,UAAN,CAAiB,CAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAUD;;AAID,eAAgBW,SAAS,CAACC,GAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport {Posts, Post} from './store/Types/States'\nimport * as actionCreators from './store/actions/postactions'\n\n\nconst mapStateToProps = (state:Posts) => {\n  return([...state.posts])\n};\n\nconst mapDispatchToProps = (dispatch:any) => {\nreturn {\ngetAllPosts: () => dispatch(actionCreators.getALlPosts()),\ngetOnePost: (id:number) => dispatch(actionCreators.getOnePosts(id)),\ngetComment: (postId:number) => dispatch(actionCreators.getComments(postId)),\npostData: (data:Post) => dispatch(actionCreators.PostData(data)),\ndeletePost: (id:number) => dispatch(actionCreators.DeletPost(id))\n}\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps)\n\n// The inferred type will look like:\n// {isOn: boolean, toggleOn: () => void}\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype Props = PropsFromRedux \nfunction App(props:PropsFromRedux) {\n  \n  return (\n    <div className=\"App\">\n      <button onClick={props.getAllPosts()}>Get All Posts</button>\n      <button onClick={props.getOnePost(1)}>Get Post (1)</button>\n      {/* <button onClick={props.getComments(1)}>Get Commnet Of Post (1)</button>\n      <button onClick={props.deletePost(1)}>Get Delete Post (1)</button>\n      <button onClick={props.deletePost(1)}>Get Delete Post (1)</button> */}\n      \n    </div>\n  );\n}\n\n\n\nexport default  connector(App);\n"]},"metadata":{},"sourceType":"module"}